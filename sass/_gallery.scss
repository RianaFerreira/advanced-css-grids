.gallery {
  background-color: $color-grey-dark-2;
  grid-column: full-start / full-end;

  // start by identifying the dimensions of the smallest image that needs to be displayed
  // images have intrinsic aspect ration and don't fill grid cells
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(7, 5vw);  // allow images to adapt to the height of the viewport
  grid-gap: 1.5rem;
  padding: 1.5rem;

  & > * {
    width: 100%;
  }

  // Item is the image container element
  &__item {
    &--1 {
      grid-row: 1 / span 2;
      grid-column: 1 / span 2;
    }

    &--2 {
      grid-row: 1 / span 3;
      grid-column: 3 / span 3;
    }

    &--3 {
      grid-row: 1 / span 2;
      grid-column: 6 / 7;
    }

    &--4 {
      grid-row: 1 / span 2;
      grid-column: 7 / -1;
    }

    &--5 {
      grid-row: 3 / span 3;
      grid-column: 1 / span 2;
    }

    &--6 {
      grid-row: 4 / span 2;
      grid-column: 3 / span 2;
    }

    &--7 {
      grid-row: 4 / 5;
      grid-column: 5 / 6;
    }

    &--8 {
      grid-row: 3 / span 2;
      grid-column: 6 / span 2;
    }

    &--9 {
      grid-row: 3 / span 3;
      grid-column: 8 / 9;
    }

    &--10 {
      grid-row: 6 / span 2;
      grid-column: 1 / 2;
    }

    &--11 {
      grid-row: 6 / span 2;
      grid-column: 2 / span 2;
    }

    &--12 {
      grid-row: 6 / span 2;
      grid-column: 4 / 5;
    }

    &--13 {
      grid-row: 5 / span 3;
      grid-column: 5 / span 3;
    }

    &--14 {
      grid-row: 6 / span 2;
      grid-column: 8 / -1;
    }
  }

  &__img {
    display: block;  // remove extra whitespace around element
    width: 100%;     // required to override the image intrinsic value
    height: 100%;    // required to override the image intrinsic value
    object-fit: cover;  // restrict the height to the parent container
  }
}
